var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _preact = require('preact');
var _TemplateTemplate = require('../Template/Template');
var _TemplateTemplateDefault = _parcelHelpers.interopDefault(_TemplateTemplate);
function _extends() {
  _extends = Object.assign || (function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  });
  return _extends.apply(this, arguments);
}
var ToggleRefinement = function ToggleRefinement(_ref) {
  var currentRefinement = _ref.currentRefinement, refine = _ref.refine, cssClasses = _ref.cssClasses, templateProps = _ref.templateProps;
  return _preact.h("div", {
    className: cssClasses.root
  }, _preact.h("label", {
    className: cssClasses.label
  }, _preact.h("input", {
    className: cssClasses.checkbox,
    type: "checkbox",
    checked: currentRefinement.isRefined,
    onChange: function onChange(event) {
      return refine({
        isRefined: !event.target.checked
      });
    }
  }), _preact.h(_TemplateTemplateDefault.default, _extends({}, templateProps, {
    rootTagName: "span",
    rootProps: {
      className: cssClasses.labelText
    },
    templateKey: "labelText",
    data: currentRefinement
  }))));
};
exports.default = ToggleRefinement;
