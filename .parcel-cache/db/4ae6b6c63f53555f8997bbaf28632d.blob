var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _preact = require('preact');
var _TemplateTemplate = require('../Template/Template');
var _TemplateTemplateDefault = _parcelHelpers.interopDefault(_TemplateTemplate);
var VoiceSearch = function VoiceSearch(_ref) {
  var cssClasses = _ref.cssClasses, isBrowserSupported = _ref.isBrowserSupported, isListening = _ref.isListening, toggleListening = _ref.toggleListening, voiceListeningState = _ref.voiceListeningState, templates = _ref.templates;
  var handleClick = function handleClick(event) {
    if (event.currentTarget instanceof HTMLElement) {
      event.currentTarget.blur();
    }
    toggleListening();
  };
  var status = voiceListeningState.status, transcript = voiceListeningState.transcript, isSpeechFinal = voiceListeningState.isSpeechFinal, errorCode = voiceListeningState.errorCode;
  return _preact.h("div", {
    className: cssClasses.root
  }, _preact.h(_TemplateTemplateDefault.default, {
    templateKey: "buttonText",
    rootTagName: "button",
    rootProps: {
      className: cssClasses.button,
      type: 'button',
      title: ("Search by voice").concat(isBrowserSupported ? '' : ' (not supported on this browser)'),
      onClick: handleClick,
      disabled: !isBrowserSupported
    },
    data: {
      status: status,
      errorCode: errorCode,
      isListening: isListening,
      transcript: transcript,
      isSpeechFinal: isSpeechFinal,
      isBrowserSupported: isBrowserSupported
    },
    templates: templates
  }), _preact.h(_TemplateTemplateDefault.default, {
    templateKey: "status",
    rootProps: {
      className: cssClasses.status
    },
    data: {
      status: status,
      errorCode: errorCode,
      isListening: isListening,
      transcript: transcript,
      isSpeechFinal: isSpeechFinal,
      isBrowserSupported: isBrowserSupported
    },
    templates: templates
  }));
};
exports.default = VoiceSearch;
